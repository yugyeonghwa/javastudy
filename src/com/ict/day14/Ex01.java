package com.ict.day14;

public class Ex01 {
/*
 	내부 클래스 : 클래스 안에 다른 클래스가 정의되어 있는 클래스
 	종류 : Member(멤버), Local(지역), static, Anonymous(익명)
 	1. Member
 	   외부클래스{
 	   	 ...
 	   	 내부클래스{
 	   	   ...
 	   	 }
 	    ...
 	   }
 	   특징) 내부클래스는 외부클래스의 멤버필드와 멤버메서드를 마음대로 사용 가능 (상속과 비슷)
 	   		단, 상속은 private 접근 안됨, 내부클래스는 private 접근 가능
 	   		외부클래스를 통해서만 내부클래스를 생성할 수 있음
 	   		(내부클래스만 별도로 객체 생성이 안됨)
 	   		
	2. Local
	   외부클래스{
	     ...
	     public void XXX(){
	     	내부클래스{
	     	  ...
	     	}
	     } // 메서드
	   } // 클래스
 	   특징) 외부클래스의 메서드 안에 내부클래스가 존재
 	        외부클래스의 지역변수처럼 사용됨
 	        내부클래스를 가진 외부클래스의 메서드가 실행되어야 내부클래스를 생성할 수 있는 조건이 됨
 	        지역변수처럼 사용되기 때문에 내부클래스를 가진 외부클래스의 메서드가 종료되면 내부클래스도 사라짐
 	       
	3. static 내부클래스
	   외부클래스{
 	   	 ...
 	   	 static 내부클래스{
 	   	   static 변수
 	   	   ...
 	   	 }
 	    ...
 	   }
 	   특징) Member 내부클래스와 같은 구조를 가지고 있음
 	   		내부클래스의 멤버변수 중 하나라도 static 있으면 내부클래스를 static으로 만들어야 됨
 	   		그냥 static 접근 방법을 사용하면 됨 (내부클래스이름.변수)
 	   		(외부클래스를 생성하지 않아도 됨)
 
	4. Anonymous(익명) 
	   외부클래스{
	     ...
	     내부클래스 참조변수 = new 생성자(){
	        ...
	     };
	     ...
	     public void methodA(){
	       new 내부클래스(){
	         ...
	       };
	     }
	     public void methodB(new 내부클래스(){
	         ...
	     });
	   }
	   특징) 정의된 클래스의 이름이 없는 클래스
	        이름이 없으므로 다시 호출할 수 없음
	        일회용으로 한번 사용되고 다시 사용할 수 없음
	        추상클래스나 인터페이스로만 가능?????????    	
 
 */
}
